#!/usr/bin/env node

/**
 * Test Script pentru HIGH_VOLUME_BURST Strategy (CORRECTED)
 * 
 * CORREC»öIE IMPORTANTƒÇ - Strategia folose»ôte:
 * - Tranzac»õii individuale mici: 5-15 USDT (SAFE!)
 * - Volume cumulate √Æn ILMT: 7k-30k ILMT total per minut
 * - Multe execu»õii mici: 100-300 trades per burst
 * - EvitƒÉ riscul financiar prin tranzac»õii mici
 */

const axios = require('axios');

// Configura»õia CORECTATƒÇ pentru testarea HIGH_VOLUME_BURST (ADJUSTED)
const HIGH_VOLUME_BURST_CONFIG = {
  enabled: true,
  monitoringMode: true, // IMPORTANT: Doar simulare pentru test
  strategy: 'HIGH_VOLUME_BURST',
  targetVolumeDaily: 50000, // 50K USDT target zilnic (adjusted)
  
  // Configura»õii AJUSTATE pentru BURST (volume mai mici, trades cu max 150 ILMT)
  burstMinVolume: 500,  // 500 ILMT cumulative target per burst (ADJUSTED)
  burstMaxVolume: 6000, // 6K ILMT cumulative target per burst (ADJUSTED)
  burstMinExecutions: 15, // 15-30 trades per burst (ADJUSTED)
  burstMaxExecutions: 30, // Pentru a atinge target-ul ILMT cumulat (ADJUSTED)
  burstPriceSpreadUnits: 0.000020, // 20 unitƒÉ»õi √Æn 6 zecimale (0.000020)
  
  // Intervale √Æntre burst-uri
  cycleIntervalMin: 60,  // 1 minut minimum
  cycleIntervalMax: 180, // 3 minute maximum
  
  // SetƒÉri de siguran»õƒÉ
  stealthMode: true,
  balanceWindow: 20,
  maxConsecutiveSide: 3,
};

const API_BASE_URL = 'http://localhost:3000/api';

async function testHighVolumeBurstStrategy() {
  console.log('üöÄ Testare HIGH_VOLUME_BURST Strategy pentru ILMT (CORRECTED)');
  console.log('================================================================');
  console.log('üîß CORREC»öIE APLICATƒÇ: Trades mici (~5-15 USDT), volume cumulate √Æn ILMT');
  console.log('');
  
  try {
    // 1. Oprire volume booster dacƒÉ ruleazƒÉ
    console.log('‚èπÔ∏è  Oprire Volume Booster...');
    await axios.post(`${API_BASE_URL}/volume-booster/stop`);
    
    // 2. Actualizare configura»õie pentru HIGH_VOLUME_BURST CORECTƒÇ
    console.log('‚öôÔ∏è  Configurare HIGH_VOLUME_BURST strategy (CORRECTED)...');
    const configResponse = await axios.patch(`${API_BASE_URL}/volume-booster/config`, HIGH_VOLUME_BURST_CONFIG);
    console.log('‚úÖ Configura»õie CORECTƒÇ aplicatƒÉ:', configResponse.data);
    
    // 3. Afi»ôare configura»õie CORECTƒÇ aplicatƒÉ
    console.log('üìã Configura»õia AJUSTATƒÇ HIGH_VOLUME_BURST:');
    console.log(`   ‚Ä¢ Target ILMT cumulat: ${HIGH_VOLUME_BURST_CONFIG.burstMinVolume} - ${HIGH_VOLUME_BURST_CONFIG.burstMaxVolume} ILMT per burst (ADJUSTED)`);
    console.log(`   ‚Ä¢ Trades individuale: MAXIM 150 ILMT fiecare (HARD LIMIT!) üîí`);
    console.log(`   ‚Ä¢ NumƒÉrul de execu»õii: ${HIGH_VOLUME_BURST_CONFIG.burstMinExecutions} - ${HIGH_VOLUME_BURST_CONFIG.burstMaxExecutions} trades per burst (ADJUSTED)`);
    console.log(`   ‚Ä¢ Spread maxim: ${HIGH_VOLUME_BURST_CONFIG.burstPriceSpreadUnits} (20 unitƒÉ»õi √Æn 6 zecimale)`);
    console.log(`   ‚Ä¢ Interval √Æntre burst-uri: ${HIGH_VOLUME_BURST_CONFIG.cycleIntervalMin} - ${HIGH_VOLUME_BURST_CONFIG.cycleIntervalMax} secunde`);
    console.log('');
    console.log('üéØ Exemplu calcul pentru un burst AJUSTAT:');
    console.log('   ‚Ä¢ Target: 3,000 ILMT (exemplu mid-range)');
    console.log('   ‚Ä¢ Pre»õ ILMT: ~$0.009');
    console.log('   ‚Ä¢ Valoare totalƒÉ: ~27 USDT');
    console.log('   ‚Ä¢ Trades de MAX 150 ILMT: 20 micro-trades');  
    console.log('   ‚Ä¢ Siguran»õƒÉ maximƒÉ: Trades mici + limitƒÉ 150 ILMT!');
    console.log('   ‚Ä¢ Risc extrem de redus prin volume mici!');
    
    // 4. Pornire Volume Booster cu noua strategie CORECTƒÇ
    console.log('\nüé¨ Pornire Volume Booster cu HIGH_VOLUME_BURST CORRECTED...');
    await axios.post(`${API_BASE_URL}/volume-booster/start`);
    console.log('‚úÖ Volume Booster pornit cu strategia CORECTƒÇ!');
    
    // 5. Monitorizare pentru 5 minute
    console.log('\nüìä Monitorizare activitate pentru 5 minute...');
    console.log('   (Strategia va executa burst-uri cu micro-trades la intervale aleatoare)');
    
    let monitoringDuration = 300; // 5 minute
    let checkInterval = 30; // La fiecare 30 secunde
    
    for (let i = 0; i < monitoringDuration / checkInterval; i++) {
      await new Promise(resolve => setTimeout(resolve, checkInterval * 1000));
      
      const status = await axios.get(`${API_BASE_URL}/volume-booster/status`);
      const stats = status.data.stats;
      
      console.log(`\n‚è∞ Minut ${((i + 1) * checkInterval / 60).toFixed(1)}:`);
      console.log(`   ‚Ä¢ Trading running: ${status.data.isRunning ? '‚úÖ' : '‚ùå'}`);
      console.log(`   ‚Ä¢ Micro-trades executate: ${stats.dailyTrades}`);
      console.log(`   ‚Ä¢ Volume total USDT: ${stats.dailyVolume.toFixed(2)} USDT (SAFE AMOUNT!)`);
      console.log(`   ‚Ä¢ BUY/SELL ratio: ${stats.buyCount}/${stats.sellCount}`);
      console.log(`   ‚Ä¢ Ultima tranzac»õie: ${stats.lastTradeTime || 'None'}`);
      
      if (stats.dailyTrades > 0) {
        const avgVolumePerTrade = stats.dailyVolume / stats.dailyTrades;
        console.log(`   ‚Ä¢ Volume mediu per micro-trade: ${avgVolumePerTrade.toFixed(2)} USDT (SAFE!)`);
        
        // Afi»ôare ultimele trades
        if (stats.recentTrades.length > 0) {
          console.log('   ‚Ä¢ Ultimele micro-trades:');
          stats.recentTrades.slice(-3).forEach((trade, idx) => {
            const tradeValue = trade.size * trade.price;
            console.log(`     ${idx + 1}. ${trade.side} ${trade.size} ILMT @ $${trade.price.toFixed(6)} (~${tradeValue.toFixed(2)} USDT)`);
          });
        }
      }
    }
    
  } catch (error) {
    console.error('‚ùå Eroare √Æn timpul testƒÉrii:', error.response?.data || error.message);
  } finally {
    // 6. Oprire Volume Booster
    console.log('\n‚èπÔ∏è  Oprire Volume Booster...');
    try {
      await axios.post(`${API_BASE_URL}/volume-booster/stop`);
      console.log('‚úÖ Volume Booster oprit');
      
      // Afi»ôare statistici finale
      const finalStatus = await axios.get(`${API_BASE_URL}/volume-booster/status`);
      const finalStats = finalStatus.data.stats;
      
      console.log('\nüìà RAPORT FINAL - HIGH_VOLUME_BURST CORRECTED Test:');
      console.log('=================================================');
      console.log(`‚Ä¢ Total micro-trades: ${finalStats.dailyTrades}`);
      console.log(`‚Ä¢ Total volume USDT: ${finalStats.dailyVolume.toFixed(2)} USDT (SAFE!)`);
      console.log(`‚Ä¢ BUY trades: ${finalStats.buyCount}`);
      console.log(`‚Ä¢ SELL trades: ${finalStats.sellCount}`);
      
      if (finalStats.dailyTrades > 0) {
        const avgVolumePerTrade = finalStats.dailyVolume / finalStats.dailyTrades;
        console.log(`‚Ä¢ Volume mediu per micro-trade: ${avgVolumePerTrade.toFixed(2)} USDT`);
        console.log(`‚Ä¢ Range »õintƒÉ per trade: ~$1.35 max (150 ILMT @ $0.009)! (ULTRA SAFE!)`);
        
        if (avgVolumePerTrade >= 0.50 && avgVolumePerTrade <= 2.00) {
          console.log('‚úÖ Volume per trade √Æn range-ul ULTRA SAFE!');
        } else {
          console.log('‚ö†Ô∏è  Volume per trade √Æn afara range-ului ultra safe - sƒÉ verificƒÉm');
        }
        
        // Estimare volume ILMT bazat pe trades
        const avgPrice = 0.009; // Estimare pre»õ ILMT
        const estimatedILMTVolume = finalStats.dailyVolume / avgPrice;
        const avgILMTPerTrade = estimatedILMTVolume / finalStats.dailyTrades;
        console.log(`‚Ä¢ Volume ILMT estimat: ${estimatedILMTVolume.toFixed(0)} ILMT`);
        console.log(`‚Ä¢ Average ILMT per trade: ${avgILMTPerTrade.toFixed(0)} ILMT (should be ‚â§150)`);
        console.log(`‚Ä¢ Target range ILMT: ${HIGH_VOLUME_BURST_CONFIG.burstMinVolume} - ${HIGH_VOLUME_BURST_CONFIG.burstMaxVolume} ILMT per burst (AJUSTAT)`);
        
        // Verify 150 ILMT limit compliance
        if (avgILMTPerTrade <= 150) {
          console.log('‚úÖ 150 ILMT per trade limit RESPECTED! üîí');
        } else {
          console.log('‚ö†Ô∏è WARNING: 150 ILMT limit might be exceeded - check implementation!');
        }
      }
      
    } catch (stopError) {
      console.error('‚ùå Eroare la oprirea Volume Booster:', stopError.response?.data || stopError.message);
    }
  }
}

// Simulare exemplu CLS CORECTƒÇ pentru compara»õie
function simulateCLSExampleCorrected() {
  console.log('\nüìä AJUSTƒÇRI FINALE - Interpretarea corectƒÉ cu volume reduse:');
  console.log('=========================================================');
  console.log('‚Ä¢ Volume cumulat: 500-6K ILMT per burst (AJUSTAT)');
  console.log('‚Ä¢ Trades individuale: MAXIM 150 ILMT fiecare (HARD LIMIT!) üîí');
  console.log('‚Ä¢ Spread pre»õ: ¬±0.000020 (20 unitƒÉ»õi √Æn 6 zecimale)');
  console.log('‚Ä¢ Execu»õii: 15-30 micro-trades pentru target cumulat (AJUSTAT)');
  console.log('‚Ä¢ Siguran»õƒÉ MAXIMƒÇ: Risc extrem de redus prin volume mici');
  console.log('');
  console.log('üéØ HIGH_VOLUME_BURST FINAL replicates this with maximum safety:');
  console.log('‚Ä¢ Spread maxim: 0.000020 (20 unitƒÉ»õi √Æn 6 zecimale) ‚úÖ');
  console.log('‚Ä¢ Target ILMT: 500-6K ILMT cumulat (AJUSTAT pentru siguran»õƒÉ) ‚úÖ');
  console.log('‚Ä¢ Micro-trades: 15-30 trades cu max 150 ILMT fiecare (ULTRA SAFE!) ‚úÖ');
  console.log('‚Ä¢ Timing: Intervale aleatoare pentru stealth ‚úÖ');
  console.log('‚Ä¢ SIGURAN»öƒÇ MAXIMƒÇ: 150 ILMT per tranzac»õie = ~$1.35 per trade! ‚úÖ');
}

// Rulare test
if (require.main === module) {
  console.log('üéØ HIGH_VOLUME_BURST Strategy Test - ILMT Trading (CORRECTED)');
  console.log('Strategia CORECTƒÇ: Micro-trades sigure cu target cumulat ILMT');
  console.log('');
  
  simulateCLSExampleCorrected();
  testHighVolumeBurstStrategy().catch(console.error);
}

module.exports = {
  testHighVolumeBurstStrategy,
  HIGH_VOLUME_BURST_CONFIG
}; 